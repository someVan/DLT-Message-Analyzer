name: Build linux Qt5

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      branch:
        description: 'Target branch'
        required: true
        default: 'master'
      upload_artifacts:
        description: 'Upload build artifacts'
        required: false
        default: 'false'
        type: boolean

jobs:
  build_linux:

    runs-on: ubuntu-latest

    steps:

    # Install uuid-dev
    - name: Install uuid-dev
      run: |
           sudo apt update
           sudo DEBIAN_FRONTEND=noninteractive apt-get -yq install uuid-dev
      shell: bash

    # Install Java 11
    - name: Install Java 11
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'

    # Install cmake version v3.24.x
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.14
      with:
        cmake-version: 'v3.24.x'

    # Checkout dlt-viewer's revision 2.27.0
    - name: Checkout of the dlt-viewer
      uses: actions/checkout@v3
      with:
        repository: someVan/dlt-viewer
        ref: 2_27_0

    # Checkout project's revision, which is pushed
    - name: Checkout of the ${{ github.event.repository.name }}
      uses: actions/checkout@v3
      with:
        repository: someVan/${{ github.event.repository.name }}
        path: ./plugin/${{ github.event.repository.name }}
        ref: ${{ github.ref }}

    # Adjust dlt-viewer's CMake file to sub-include the plugin
    - name: Patch dlt-viewer's CMakeLists.txt
      run: echo 'add_subdirectory(${{ github.event.repository.name }}/dltmessageanalyzerplugin/src)' >> CMakeLists.txt
      shell: bash
      working-directory: ./plugin

    # Install Qt5
    - name: Install Qt5
      uses: jurplel/install-qt-action@v3
      with:
         version: 5.15.0
         target: desktop
         host: linux
         dir: ${{ github.workspace }}/Qt5
         cache: true

    # Create build directory
    - name: Creation of the "../build" directory
      run: mkdir ../build
      shell: bash
      working-directory: ./

    # CMake execution
    - name: CMake
      run: cmake ../${{ github.event.repository.name }}
      shell: bash
      working-directory: ../build

    # Build of the project
    - name: Make
      run: make -j8
      shell: bash
      working-directory: ../build

    # Collect required files after build is finished
    - name: Collect required files
      if: ${{ github.event.inputs.upload_artifacts == 'true' }}
      run: |
        mkdir ./release_linux_qt5
        sudo apt update
        sudo apt install tree
        tree -f -a ../build > ./release_linux_qt5/outputBuild_qt5.txt
        tree -f -a ./ > ./release_linux_qt5/outputInside_qt5.txt
      shell: bash
      working-directory: ./

    - name: Archive artifact
      uses: actions/upload-artifact@v4
      if: ${{ success() && github.event.inputs.upload_artifacts == 'true'}}
      with:
        name: release_linux_qt5
        path: |
          release_linux_qt5
